{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dal\\\\Desktop\\\\FT-M2-Hecho\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from './components/Card.jsx';\nimport Cards from './components/Cards.jsx';\nimport SearchBar from './components/SearchBar.jsx';\nimport fetchCity from './services/fetchCity.js';\nimport styles from \"./App.module.css\"; //Traigo la imagen de fondo\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = React.useState([]); //creo el estado\n\n  function onSearch(ciudad) {\n    //funcion q limita el ingreso de ciudades\n    if (data.length > 2) {\n      alert(\"No puedes agregar mas ciudades.\");\n    } else {\n      fetchCity(ciudad, setData);\n    }\n  }\n\n  function handleOnClose(id) {\n    //funcion q elimina una Card(Ciudad) del array\n    setData(prevData => {\n      return prevData.filter(city => city.id !== id);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bkg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.citiesContainer,\n        children: data.length > 0 ?\n        /*#__PURE__*/\n\n        /*Si array tiene mas de una ciudad, renderiza Card y sus comp. Esta condicion deja en esta Card la ultima ciudad buscada*/\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            primary: true\n            /*React asigna el valor true x defecto, no hace falta asignar*/\n            ,\n            max: data[data.length - 1].max //Acceden al ultimo elemento del array\n            ,\n            min: data[data.length - 1].min,\n            name: data[data.length - 1].name,\n            img: data[data.length - 1].img //onClose={() => alert(Cairns.name)} //No tiene, por eso lo comento\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cards, {\n            cities: data,\n            onClose: id => handleOnClose(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        //Si el array esta vacio(<0) agregar una ciudadd\n        _jsxDEV(\"span\", {\n          style: {\n            textAlign: \"center\",\n            width: \"70vw\",\n            marginTop: \"1rem\"\n          },\n          children: \"Agrega una nueva ciudad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dal/Desktop/FT-M2-Hecho/08-React-Estado-LifeCycle/homework/src/App.js"],"names":["React","Card","Cards","SearchBar","fetchCity","styles","App","data","setData","useState","onSearch","ciudad","length","alert","handleOnClose","id","prevData","filter","city","app","bkg","container","citiesContainer","max","min","name","img","textAlign","width","marginTop"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAAsC;;;;;AAItC,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAxB,CADa,CAC+B;;AAE5C,WAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAAE;AAC1B,QAAGJ,IAAI,CAACK,MAAL,GAAc,CAAjB,EAAoB;AAClBC,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACD,KAFD,MAEO;AACLT,MAAAA,SAAS,CAACO,MAAD,EAASH,OAAT,CAAT;AACC;AACF;;AAEH,WAASM,aAAT,CAAuBC,EAAvB,EAA2B;AAAE;AAC3BP,IAAAA,OAAO,CAACQ,QAAQ,IAAI;AAClB,aAAQA,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAApC,CAAR;AACD,KAFM,CAAP;AAGD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACc,GAAvB;AAAA,iCACE;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACe;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,oBAEE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACgB,SAAvB;AAAA,8BACE;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAEX;AAArB;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAEL,MAAM,CAACiB,eAAvB;AAAA,kBAEGf,IAAI,CAACK,MAAL,GAAc,CAAd;AAAA;;AAAoB;AACnB;AAAA,kCACE,QAAC,IAAD;AACE,YAAA,OAAO;AAAA;AADT;AAEE,YAAA,GAAG,EAAEL,IAAI,CAACA,IAAI,CAACK,MAAL,GAAY,CAAb,CAAJ,CAAoBW,GAF3B,CAEgC;AAFhC;AAGE,YAAA,GAAG,EAAEhB,IAAI,CAACA,IAAI,CAACK,MAAL,GAAY,CAAb,CAAJ,CAAoBY,GAH3B;AAIE,YAAA,IAAI,EAAEjB,IAAI,CAACA,IAAI,CAACK,MAAL,GAAY,CAAb,CAAJ,CAAoBa,IAJ5B;AAKE,YAAA,GAAG,EAAElB,IAAI,CAACA,IAAI,CAACK,MAAL,GAAY,CAAb,CAAJ,CAAoBc,GAL3B,CAME;;AANF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,KAAD;AACE,YAAA,MAAM,EAAEnB,IADV;AAEE,YAAA,OAAO,EAAGQ,EAAD,IAAQD,aAAa,CAACC,EAAD;AAFhC;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA,wBADD;AAAA;AAeK;AACJ;AAAM,UAAA,KAAK,EAAE;AAAEY,YAAAA,SAAS,EAAE,QAAb;AAAuBC,YAAAA,KAAK,EAAE,MAA9B;AAAsCC,YAAAA,SAAS,EAAC;AAAhD,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAnDQvB,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport Card from './components/Card.jsx';\r\nimport Cards from './components/Cards.jsx';\r\nimport SearchBar from './components/SearchBar.jsx';\r\nimport fetchCity from './services/fetchCity.js';\r\n\r\nimport styles from \"./App.module.css\" //Traigo la imagen de fondo\r\n\r\n\r\n\r\nfunction App() {\r\n  const [data, setData] = React.useState([]); //creo el estado\r\n\r\n  function onSearch(ciudad) { //funcion q limita el ingreso de ciudades\r\n    if(data.length > 2) {\r\n      alert(\"No puedes agregar mas ciudades.\")\r\n    } else { \r\n      fetchCity(ciudad, setData);\r\n      }\r\n    }\r\n\r\n  function handleOnClose(id) { //funcion q elimina una Card(Ciudad) del array\r\n    setData(prevData => {\r\n      return  prevData.filter(city => city.id !== id)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={styles.app}> {/*imagen de fondo total*/}\r\n      <div className={styles.bkg}/> {/*imagen q va en el medio (borrosa)*/}\r\n      <div className={styles.container}>\r\n        <div>\r\n          <SearchBar onSearch={onSearch} /> {/*..o pasarle la ciudad directamente,  */}\r\n          {/*<SearchBar onSearch={(ciudad) => onSearch(ciudad)} /> --> ..puedo hacer esto..*/} \r\n        </div>    \r\n        <div className={styles.citiesContainer}>\r\n          {/*Es la Card grande solita*/}\r\n          {data.length > 0 ? ( /*Si array tiene mas de una ciudad, renderiza Card y sus comp. Esta condicion deja en esta Card la ultima ciudad buscada*/\r\n            <>\r\n              <Card \r\n                primary/*React asigna el valor true x defecto, no hace falta asignar*/\r\n                max={data[data.length-1].max} //Acceden al ultimo elemento del array\r\n                min={data[data.length-1].min}\r\n                name={data[data.length-1].name}\r\n                img={data[data.length-1].img}\r\n                //onClose={() => alert(Cairns.name)} //No tiene, por eso lo comento\r\n              />\r\n              <Cards \r\n                cities={data} \r\n                onClose={(id) => handleOnClose(id)} \r\n              />   \r\n            </>\r\n          ) : ( //Si el array esta vacio(<0) agregar una ciudadd\r\n            <span style={{ textAlign: \"center\", width: \"70vw\", marginTop:\"1rem\"}}>\r\n              Agrega una nueva ciudad\r\n            </span> \r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}