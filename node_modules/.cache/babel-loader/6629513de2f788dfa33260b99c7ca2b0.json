{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dal\\\\Desktop\\\\FT-M2-Hecho\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\App.js\";\nimport React from 'react';\nimport Card from './components/Card.jsx';\nimport Cards from './components/Cards.jsx';\nimport SearchBar from './components/SearchBar.jsx';\nimport data, { Cairns } from './data.js';\nimport styles from \"./App.module.css\"; //Traigo la imagen de fondo\n//Pasos para usar de forma optima una apikey\n// 1-Creo una variable de entorno p/ guardar mi apikey y guardo en una cte.\n// 1.1-por definicion \"process.env\" + \".REACT_APP_\" + \"APIKEY\"(el nombre q yo asigne)\n// 2-Creo un archivo \".env\" a nivel local y ahi pego mi apikey.\n//ACLARACION: Por requisi de React, al crear una var de entorno del lado del cliente(navegador), \n// se empieza con \".REACT_APP_\" y luego va el nombre q desee. Es la unica forma q la info llegue al navegador del cliente\n//const apiKey = process.env.REACT_APP_APIKEY; //Var de entorno SIEMPRE EN MAYUSCULA\n//Hago esto xq no me anda la var de entorno de arriba. Pero esta info es secreta y NUNCA debe ir en el codigo\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"5f78c1c3105c4b7c874697259ced800a\"; //Esto porque no me anda lo de arriba\n\nfunction onSearch(ciudad) {\n  //Acá hago el llamado a la API para obtener los datos de la ciudad\n  fetch( //Devuelve una PROMESA, NO UN RESULTADO. Esta implementado en el navegador, no debo instalar libreria adicional\n  `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric` //pego esta ruta q me a responder con algo q aun no se\n  ).then(r => r.json()) //\".then\" le digo q hacer si la promesa se cumple. Recibe una rpta \"r\" y a esa rpta le aplica el metodo Jason \"r.json()\"\n  .then(recurso => {\n    // luego pasa a \"(recurso) q es todo el objeto q viene como rpta\"\n    if (recurso.main !== undefined) {// const ciudad = { //Crea un objeto ciudad y lo agrega al estado cities\n      //   min: Math.round(recurso.main.temp_min),\n      //   max: Math.round(recurso.main.temp_max),\n      //   img: recurso.weather[0].icon,\n      //   id: recurso.id,\n      //   wind: recurso.wind.speed,\n      //   temp: recurso.main.temp,\n      //   name: recurso.name,\n      //   weather: recurso.weather[0].main,\n      //   clouds: recurso.clouds.all,\n      //   latitud: recurso.coord.lat,\n      //   longitud: recurso.coord.lon\n      // };\n      //setCities(oldCities => [...oldCities, ciudad]);\n    } else {\n      alert(\"Ciudad no encontrada\");\n    }\n  });\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bkg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.citiesContainer,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          primary: true\n          /*Solo con mencionarla React asigna el valor true */\n          ,\n          max: Cairns.main.temp_max,\n          min: Cairns.main.temp_min,\n          name: Cairns.name,\n          img: Cairns.weather[0].icon,\n          onClose: () => alert(Cairns.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Cards, {\n          cities: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dal/Desktop/FT-M2-Hecho/08-React-Estado-LifeCycle/homework/src/App.js"],"names":["React","Card","Cards","SearchBar","data","Cairns","styles","apiKey","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","alert","App","app","bkg","container","citiesContainer","temp_max","temp_min","name","weather","icon"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,IAAP,IAAeC,MAAf,QAA6B,WAA7B;AAEA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAAsC;AAItC;AACE;AACE;AACF;AAEA;AACA;AACF;AAGA;;;AACA,MAAMC,MAAM,GAAG,kCAAf,C,CAAmD;;AAEnD,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxB;AACAC,EAAAA,KAAK,EAAG;AACP,sDAAmDD,MAAO,UAASF,MAAO,eADtE,CACqF;AADrF,GAAL,CAGGI,IAHH,CAGQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAHb,EAGuB;AAHvB,GAIGF,IAJH,CAISG,OAAD,IAAa;AAAE;AACnB,QAAGA,OAAO,CAACC,IAAR,KAAiBC,SAApB,EAA8B,CAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAfD,MAeO;AACLC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,GAvBH;AAwBC;;AAKH,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa,GAAvB;AAAA,iCACE;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACc;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,oBAEE;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACe,SAAvB;AAAA,8BACE;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAEb;AAArB;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAEF,MAAM,CAACgB,eAAvB;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,OAAO;AAAC;AADV;AAEE,UAAA,GAAG,EAAEjB,MAAM,CAACU,IAAP,CAAYQ,QAFnB;AAGE,UAAA,GAAG,EAAElB,MAAM,CAACU,IAAP,CAAYS,QAHnB;AAIE,UAAA,IAAI,EAAEnB,MAAM,CAACoB,IAJf;AAKE,UAAA,GAAG,EAAEpB,MAAM,CAACqB,OAAP,CAAe,CAAf,EAAkBC,IALzB;AAME,UAAA,OAAO,EAAE,MAAMV,KAAK,CAACZ,MAAM,CAACoB,IAAR;AANtB;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAErB;AAAf;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;KAvBQc,G;AAyBT,eAAeA,GAAf","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport Card from './components/Card.jsx';\r\nimport Cards from './components/Cards.jsx';\r\nimport SearchBar from './components/SearchBar.jsx';\r\nimport data, { Cairns } from './data.js';\r\n\r\nimport styles from \"./App.module.css\" //Traigo la imagen de fondo\r\n\r\n\r\n  \r\n//Pasos para usar de forma optima una apikey\r\n  // 1-Creo una variable de entorno p/ guardar mi apikey y guardo en una cte.\r\n    // 1.1-por definicion \"process.env\" + \".REACT_APP_\" + \"APIKEY\"(el nombre q yo asigne)\r\n  // 2-Creo un archivo \".env\" a nivel local y ahi pego mi apikey.\r\n\r\n  //ACLARACION: Por requisi de React, al crear una var de entorno del lado del cliente(navegador), \r\n  // se empieza con \".REACT_APP_\" y luego va el nombre q desee. Es la unica forma q la info llegue al navegador del cliente\r\n//const apiKey = process.env.REACT_APP_APIKEY; //Var de entorno SIEMPRE EN MAYUSCULA\r\n\r\n\r\n//Hago esto xq no me anda la var de entorno de arriba. Pero esta info es secreta y NUNCA debe ir en el codigo\r\nconst apiKey = \"5f78c1c3105c4b7c874697259ced800a\"; //Esto porque no me anda lo de arriba\r\n\r\nfunction onSearch(ciudad) {\r\n  //Acá hago el llamado a la API para obtener los datos de la ciudad\r\n  fetch ( //Devuelve una PROMESA, NO UN RESULTADO. Esta implementado en el navegador, no debo instalar libreria adicional\r\n  `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric` //pego esta ruta q me a responder con algo q aun no se\r\n  )\r\n    .then(r => r.json()) //\".then\" le digo q hacer si la promesa se cumple. Recibe una rpta \"r\" y a esa rpta le aplica el metodo Jason \"r.json()\"\r\n    .then((recurso) => { // luego pasa a \"(recurso) q es todo el objeto q viene como rpta\"\r\n      if(recurso.main !== undefined){\r\n        // const ciudad = { //Crea un objeto ciudad y lo agrega al estado cities\r\n        //   min: Math.round(recurso.main.temp_min),\r\n        //   max: Math.round(recurso.main.temp_max),\r\n        //   img: recurso.weather[0].icon,\r\n        //   id: recurso.id,\r\n        //   wind: recurso.wind.speed,\r\n        //   temp: recurso.main.temp,\r\n        //   name: recurso.name,\r\n        //   weather: recurso.weather[0].main,\r\n        //   clouds: recurso.clouds.all,\r\n        //   latitud: recurso.coord.lat,\r\n        //   longitud: recurso.coord.lon\r\n        // };\r\n        //setCities(oldCities => [...oldCities, ciudad]);\r\n      } else {\r\n        alert(\"Ciudad no encontrada\");\r\n      }\r\n    });  \r\n  }\r\n\r\n\r\n    \r\n    \r\nfunction App() {\r\n  return (\r\n    <div className={styles.app}> {/*imagen de fondo total*/}\r\n      <div className={styles.bkg}/> {/*imagen q va en el medio (borrosa)*/}\r\n      <div className={styles.container}>\r\n        <div>\r\n          <SearchBar onSearch={onSearch} /> {/*..o pasarle la ciudad directamente,  */}\r\n          {/*<SearchBar onSearch={(ciudad) => onSearch(ciudad)} /> --> ..puedo hacer esto..*/} \r\n        </div>    \r\n        <div className={styles.citiesContainer}>\r\n          <Card\r\n            primary /*Solo con mencionarla React asigna el valor true */\r\n            max={Cairns.main.temp_max}\r\n            min={Cairns.main.temp_min}\r\n            name={Cairns.name}\r\n            img={Cairns.weather[0].icon}\r\n            onClose={() => alert(Cairns.name)}\r\n          />\r\n          <Cards cities={data} />   \r\n        </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}