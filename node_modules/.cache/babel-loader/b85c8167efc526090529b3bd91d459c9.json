{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dal\\\\Desktop\\\\FT-M2-Hecho\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\components\\\\Cards.jsx\";\n// import React from 'react';\n// import './Cards.css';\n// import Card from './Card.jsx';\n// export default function Cards({cities, onClose}) {\n//   if(cities){\n//     return (\n//       <div className='cards'>\n//         {cities.map(c => <Card\n//             max={c.max}\n//             min={c.min}\n//             name={c.name}\n//             img={c.img}\n//             onClose={() => onClose(c.id)}\n//             id={c.id}\n//           /> )}\n//       </div>\n//     );\n//   } else {\n//     return(\n//       <div>Sin ciudades</div>\n//     )\n//   }\n// }\n//----------------------------------Homework hecho por Diego-------------------------------------\nimport React from 'react';\nimport Card from './Card.jsx';\nimport estilos from './Cards.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards(props) {\n  // acá va tu código\n  // tip, podés usar un map\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: estilos.contenedor,\n    children: [\" \", props.cities.map(c =>\n    /*#__PURE__*/\n    //Por cada objeto(ciudad) de cities..\n    _jsxDEV(Card //va a renderizar un componente Card(pasandole como props man, min, name, img, onClose)\n    , {\n      max: c.main.temp_max // \"c\" porque voy recoriendo(mapeando) el arreglo(p/c/ciudad renderiza max y asi..)\n      ,\n      min: c.main.temp_min,\n      name: c.name,\n      img: c.weather[0].icon,\n      onClose: () => alert(c.name)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = Cards;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["C:/Users/Dal/Desktop/FT-M2-Hecho/08-React-Estado-LifeCycle/homework/src/components/Cards.jsx"],"names":["React","Card","estilos","Cards","props","contenedor","cities","map","c","main","temp_max","temp_min","name","weather","icon","alert"],"mappings":";AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC;AACA;AACA,sBACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACG,UAAxB;AAAA,oBACGD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAkBC,CAAD;AAAA;AAAQ;AACxB,YAAC,IAAD,CAAM;AAAN;AACE,MAAA,GAAG,EAAEA,CAAC,CAACC,IAAF,CAAOC,QADd,CACwB;AADxB;AAEE,MAAA,GAAG,EAAEF,CAAC,CAACC,IAAF,CAAOE,QAFd;AAGE,MAAA,IAAI,EAAEH,CAAC,CAACI,IAHV;AAIE,MAAA,GAAG,EAAEJ,CAAC,CAACK,OAAF,CAAU,CAAV,EAAaC,IAJpB;AAKE,MAAA,OAAO,EAAE,MAAMC,KAAK,CAACP,CAAC,CAACI,IAAH;AALtB;AAAA;AAAA;AAAA;AAAA,YADD,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;KAfuBT,K;AAevB","sourcesContent":["// import React from 'react';\r\n// import './Cards.css';\r\n\r\n// import Card from './Card.jsx';\r\n\r\n// export default function Cards({cities, onClose}) {\r\n//   if(cities){\r\n//     return (\r\n//       <div className='cards'>\r\n//         {cities.map(c => <Card\r\n//             max={c.max}\r\n//             min={c.min}\r\n//             name={c.name}\r\n//             img={c.img}\r\n//             onClose={() => onClose(c.id)}\r\n//             id={c.id}\r\n//           /> )}\r\n//       </div>\r\n//     );\r\n//   } else {\r\n//     return(\r\n//       <div>Sin ciudades</div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n\r\n//----------------------------------Homework hecho por Diego-------------------------------------\r\nimport React from 'react';\r\nimport Card from './Card.jsx'\r\nimport estilos from './Cards.module.css';\r\n\r\nexport default function Cards(props) {\r\n  // acá va tu código\r\n  // tip, podés usar un map\r\n  return (\r\n    <div className={estilos.contenedor}> {/*Contenedor q contiene las 3 cartitas(Cairs,London,Denver)*/}\r\n      {props.cities.map((c) => (//Por cada objeto(ciudad) de cities..\r\n        <Card //va a renderizar un componente Card(pasandole como props man, min, name, img, onClose)\r\n          max={c.main.temp_max} // \"c\" porque voy recoriendo(mapeando) el arreglo(p/c/ciudad renderiza max y asi..)\r\n          min={c.main.temp_min}\r\n          name={c.name}\r\n          img={c.weather[0].icon}\r\n          onClose={() => alert(c.name)}\r\n        />\r\n      ))}\r\n    </div>)\r\n};\r\n"]},"metadata":{},"sourceType":"module"}