{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dal\\\\Desktop\\\\FT-M2-Hecho\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\App.js\";\n// import React from 'react';\n// import Card from \"./components/Card.jsx\";\n// import Cards from \"./components/Cards.jsx\";\n// import SearchBar from './components/SearchBar.jsx';\n// import data, { cairns } from \"./data.jsx\";\n// import styles from \"./App.module.css\"\n// //export default function App() {\n//   //const [cities, setCities] = useState([]);\n//   //var apiKey = '2f47152f1c107a8b4f0d7b058cb65e6d' -> Es confidencial, NUNCA usar conste, si una variable de entorno\n//   //Variable de entorno para guardar mi apikey\n//   const apiKey = process.env.REACT_APP_APIKEY; \n//   function onSearch(ciudad) {\n//     //Acá habría que hacer el llamado a la API para obtener los datos de la ciudad(pegue la Api)\n//     fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\n//       .then(r => r.json())\n//       .then((recurso) => {\n//         if(recurso.main !== undefined){\n//           // const ciudad = { //Crea un objeto ciudad y lo agrega al estado cities\n//           //   min: Math.round(recurso.main.temp_min),\n//           //   max: Math.round(recurso.main.temp_max),\n//           //   img: recurso.weather[0].icon,\n//           //   id: recurso.id,\n//           //   wind: recurso.wind.speed,\n//           //   temp: recurso.main.temp,\n//           //   name: recurso.name,\n//           //   weather: recurso.weather[0].main,\n//           //   clouds: recurso.clouds.all,\n//           //   latitud: recurso.coord.lat,\n//           //   longitud: recurso.coord.lon\n//           // };\n//           //setCities(oldCities => [...oldCities, ciudad]);\n//         } else {\n//           alert(\"Ciudad no encontrada\");\n//         }\n//       });\n//     }\n// //     function onClose(id) {\n// //       setCities(oldCities => oldCities.filter(c => c.id != id));\n// //     }\n// //   return ( //explicado en mi cuaderno\n// //     <div className=\"App\">\n// //       <Nav onSearch={onSearch}/>\n// //       <Cards cities={cities} onClose={onClose} />\n// //     </div>\n// //   );\n// // }\n// function App(){\n//   return (\n//     <div className={styles.app}>\n//       <div className={styles.bkg} />\n//       <div className={styles.container}>\n//         <div>\n//           {/*<SearchBar onSearch={(ciudad) => alert(ciudad)} /> --> recibe ciudad y le pasa ciudad = q la funcion onsearch q esta arriba, entonces borro y paso directamente la funcion onSearch*/}\n//           <SearchBar onSearch={onSearch} /> {/*No la estoy instanciando, solo le paso */}\n//         </div>\n//         <div className={styles.citiesContainer}>\n//           <Card \n//             primary \n//             max={Cairns.main.temp_max}\n//             min={Cairns.main.temp_min}\n//             name={Cairns.name}\n//             img={Cairns.weather[0].icon}\n//             onClose={() => alert(Cairns.name)}\n//           />\n//           <Cards cities={data}/>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\nimport React from 'react';\nimport './App.css';\nimport Card from './components/Card.jsx';\nimport Cards from './components/Cards.jsx';\nimport SearchBar from './components/SearchBar.jsx';\nimport data, { Cairns } from './data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        cities: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: ciudad => alert(ciudad)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dal/Desktop/FT-M2-Hecho/08-React-Estado-LifeCycle/homework/src/App.js"],"names":["React","Card","Cards","SearchBar","data","Cairns","App","ciudad","alert"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,IAAP,IAAeC,MAAf,QAA6B,WAA7B;;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAUE;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,MAAM,EAAEF;AADV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAGG,MAAD,IAAYC,KAAK,CAACD,MAAD;AAD7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;KA1BQD,G;AA4BT,eAAeA,GAAf","sourcesContent":["// import React from 'react';\r\n// import Card from \"./components/Card.jsx\";\r\n// import Cards from \"./components/Cards.jsx\";\r\n// import SearchBar from './components/SearchBar.jsx';\r\n// import data, { cairns } from \"./data.jsx\";\r\n\r\n// import styles from \"./App.module.css\"\r\n\r\n\r\n// //export default function App() {\r\n//   //const [cities, setCities] = useState([]);\r\n\r\n//   //var apiKey = '2f47152f1c107a8b4f0d7b058cb65e6d' -> Es confidencial, NUNCA usar conste, si una variable de entorno\r\n  \r\n//   //Variable de entorno para guardar mi apikey\r\n//   const apiKey = process.env.REACT_APP_APIKEY; \r\n\r\n//   function onSearch(ciudad) {\r\n//     //Acá habría que hacer el llamado a la API para obtener los datos de la ciudad(pegue la Api)\r\n//     fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\r\n//       .then(r => r.json())\r\n//       .then((recurso) => {\r\n//         if(recurso.main !== undefined){\r\n//           // const ciudad = { //Crea un objeto ciudad y lo agrega al estado cities\r\n//           //   min: Math.round(recurso.main.temp_min),\r\n//           //   max: Math.round(recurso.main.temp_max),\r\n//           //   img: recurso.weather[0].icon,\r\n//           //   id: recurso.id,\r\n//           //   wind: recurso.wind.speed,\r\n//           //   temp: recurso.main.temp,\r\n//           //   name: recurso.name,\r\n//           //   weather: recurso.weather[0].main,\r\n//           //   clouds: recurso.clouds.all,\r\n//           //   latitud: recurso.coord.lat,\r\n//           //   longitud: recurso.coord.lon\r\n//           // };\r\n//           //setCities(oldCities => [...oldCities, ciudad]);\r\n//         } else {\r\n//           alert(\"Ciudad no encontrada\");\r\n//         }\r\n//       });\r\n  \r\n//     }\r\n\r\n// //     function onClose(id) {\r\n// //       setCities(oldCities => oldCities.filter(c => c.id != id));\r\n// //     }\r\n  \r\n// //   return ( //explicado en mi cuaderno\r\n// //     <div className=\"App\">\r\n// //       <Nav onSearch={onSearch}/>\r\n// //       <Cards cities={cities} onClose={onClose} />\r\n// //     </div>\r\n// //   );\r\n\r\n// // }\r\n\r\n// function App(){\r\n//   return (\r\n//     <div className={styles.app}>\r\n//       <div className={styles.bkg} />\r\n//       <div className={styles.container}>\r\n//         <div>\r\n//           {/*<SearchBar onSearch={(ciudad) => alert(ciudad)} /> --> recibe ciudad y le pasa ciudad = q la funcion onsearch q esta arriba, entonces borro y paso directamente la funcion onSearch*/}\r\n//           <SearchBar onSearch={onSearch} /> {/*No la estoy instanciando, solo le paso */}\r\n\r\n//         </div>\r\n//         <div className={styles.citiesContainer}>\r\n//           <Card \r\n//             primary \r\n//             max={Cairns.main.temp_max}\r\n//             min={Cairns.main.temp_min}\r\n//             name={Cairns.name}\r\n//             img={Cairns.weather[0].icon}\r\n//             onClose={() => alert(Cairns.name)}\r\n//           />\r\n//           <Cards cities={data}/>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport React from 'react';\r\nimport './App.css';\r\nimport Card from './components/Card.jsx';\r\nimport Cards from './components/Cards.jsx';\r\nimport SearchBar from './components/SearchBar.jsx';\r\nimport data, { Cairns } from './data.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <div>\r\n        <Card\r\n          max={Cairns.main.temp_max}\r\n          min={Cairns.main.temp_min}\r\n          name={Cairns.name}\r\n          img={Cairns.weather[0].icon}\r\n          onClose={() => alert(Cairns.name)}\r\n        />\r\n      </div> */}\r\n      <hr />\r\n      <div>\r\n        <Cards\r\n          cities={data}\r\n        />\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <SearchBar\r\n          onSearch={(ciudad) => alert(ciudad)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}